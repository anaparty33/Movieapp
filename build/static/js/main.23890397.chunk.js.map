{"version":3,"sources":["service/index.js","components/Footer.js","components/home/Home.jsx","components/moviedetail/MovieDetail.jsx","App.jsx","serviceWorker.js","index.js"],"names":["apiKey","url","nowPlayingUrl","topratedUrl","movieUrl","genreUrl","moviesUrl","personUrl","fetchMovies","a","axios","get","params","api_key","language","page","data","posterUrl","modifiedData","map","m","id","backPoster","popularity","title","poster","overview","rating","fetchGenre","g","name","fetchMovieByGenre","genre_id","with_genres","fetchPersons","p","profileImg","known","fetchTopratedMovie","fetchMovieDetail","fetchMovieVideos","fetchCasts","c","character","img","fetchSimilarMovie","Footer","className","style","color","href","class","Home","useState","nowPlaying","setNowPlaying","genres","setGenres","movieByGenre","setMovieByGenre","persons","setPersons","topRated","setTopRated","useEffect","fetchAPI","handleGenreClick","movies","slice","item","index","height","width","key","src","alt","fontSize","textAlign","genreList","type","onClick","movieList","to","fontWeight","count","size","color1","trendingPersons","i","topRatedList","autoplay","pauseOnVisibility","slidesshowSpeed","version","indicators","borderTop","MovieDetail","match","isOpen","setIsOpen","detail","setDetail","video","setVideo","casts","setCasts","similarMovie","setSimilarMovie","genresList","MoviePalyerModal","props","Modal","aria-labelledby","centered","Header","closeButton","Title","Body","backgroundColor","playing","castList","similarMovieList","Button","variant","show","onHide","backdrop_path","cursor","vote_average","release_date","runtime","budget","homepage","App","path","component","exact","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.23890397.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst apiKey = 'a4999a28333d1147dbac0d104526337a';\nconst url = 'https://api.themoviedb.org/3';\nconst nowPlayingUrl = `${url}/movie/now_playing`;\nconst topratedUrl = `${url}/movie/top_rated`;\nconst movieUrl = `${url}/movie`;\nconst genreUrl = `${url}/genre/movie/list`;\nconst moviesUrl = `${url}/discover/movie`;\nconst personUrl = `${url}/trending/person/week`;\n\nexport const fetchMovies = async () => {\n    try {\n        const { data } = await axios.get(nowPlayingUrl, {\n            params: {\n                api_key: apiKey,\n                language: 'en_US',\n                page: 1\n            }\n        })\n\n        const posterUrl = 'https://image.tmdb.org/t/p/original/';\n        const modifiedData = data['results'].map((m) => ({\n            id: m['id'],\n            backPoster: posterUrl + m['backdrop_path'],\n            popularity: m['popularith'],\n            title: m['title'],\n            poster: posterUrl + m['poster_path'],\n            overview: m['overview'],\n            rating: m['vote_average'],\n        }))\n\n        return modifiedData;\n    } catch (error) { }\n}\n\nexport const fetchGenre = async () => {\n    try {\n        const { data } = await axios.get(genreUrl, {\n            params: {\n                api_key: apiKey,\n                language: 'en_US',\n                page: 1\n            }\n        })\n        const modifiedData = data['genres'].map((g) => ({\n            id: g['id'],\n            name: g['name']\n        }))\n        return modifiedData;\n    } catch (error) { }\n}\n\nexport const fetchMovieByGenre = async (genre_id) => {\n    try {\n        const { data } = await axios.get(moviesUrl, {\n            params: {\n                api_key: apiKey,\n                language: 'en_US',\n                page: 1,\n                with_genres: genre_id\n            }\n        })\n        const posterUrl = 'https://image.tmdb.org/t/p/original/';\n        const modifiedData = data['results'].map((m) => ({\n            id: m['id'],\n            backPoster: posterUrl + m['backdrop_path'],\n            popularity: m['popularith'],\n            title: m['title'],\n            poster: posterUrl + m['poster_path'],\n            overview: m['overview'],\n            rating: m['vote_average'],\n        }))\n\n        return modifiedData;\n    } catch (error) { }\n}\n\nexport const fetchPersons = async () => {\n    try {\n        const { data } = await axios.get(personUrl, {\n            params: {\n                api_key: apiKey\n            }\n        })\n        const modifiedData = data['results'].map((p) => ({\n            id: p['id'],\n            popularity: p['popularity'],\n            name: p['name'],\n            profileImg: 'https://image.tmdb.org/t/p/w200' + p['profile_path'],\n            known: p['known_for_department']\n        }))\n        return modifiedData;\n    } catch (error) { }\n}\n\nexport const fetchTopratedMovie = async () => {\n    try {\n        const { data } = await axios.get(topratedUrl, {\n            params: {\n                api_key: apiKey,\n                language: 'en_US',\n                page: 1\n            }\n        })\n        const posterUrl = 'https://image.tmdb.org/t/p/original/';\n        const modifiedData = data['results'].map((m) => ({\n            id: m['id'],\n            backPoster: posterUrl + m['backdrop_path'],\n            popularity: m['popularith'],\n            title: m['title'],\n            poster: posterUrl + m['poster_path'],\n            overview: m['overview'],\n            rating: m['vote_average'],\n        }))\n\n        return modifiedData;\n    } catch (error) {\n\n    }\n}\n\nexport const fetchMovieDetail = async (id) => {\n    try {\n        const { data } = await axios.get(`${movieUrl}/${id}`, {\n            params: {\n                api_key: apiKey,\n                language: 'en_US'\n            }\n        });\n        return data;\n    } catch (error) { }\n}\n\nexport const fetchMovieVideos = async (id) => {\n    try {\n        const { data } = await axios.get(`${movieUrl}/${id}/videos`, {\n            params: {\n                api_key: apiKey,\n            }\n        });\n        return data['results'][0];\n    } catch (error) { }\n}\n\nexport const fetchCasts = async (id) => {\n    try {\n        const { data } = await axios.get(`${movieUrl}/${id}/credits`, {\n            params: {\n                api_key: apiKey,\n            }\n        });\n        const modifiedData = data['cast'].map((c) => ({\n            id: c['cast_id'],\n            character: c['character'],\n            name: c['name'],\n            img: 'https://image.tmdb.org/t/p/w200' + c['profile_path'],\n        }))\n\n        return modifiedData;\n    } catch (error) { }\n}\n\nexport const fetchSimilarMovie = async (id) => {\n    try {\n        const { data } = await axios.get(`${movieUrl}/${id}/similar`, {\n            params: {\n                api_key: apiKey,\n                language: 'en_US'\n            }\n        });\n        const posterUrl = 'https://image.tmdb.org/t/p/original/';\n        const modifiedData = data['results'].map((m) => ({\n            id: m['id'],\n            backPoster: posterUrl + m['backdrop_path'],\n            popularity: m['popularith'],\n            title: m['title'],\n            poster: posterUrl + m['poster_path'],\n            overview: m['overview'],\n            rating: m['vote_average'],\n        }))\n\n        return modifiedData;\n    } catch (error) { }\n}\n","import React from \"react\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div className=\"row mt-3 mb-5\">\r\n      <div className=\"col-md-8 col-sm-6\" style={{ color: \"#5a606b\" }}>\r\n        <h3>ABOUT ME</h3>\r\n        <p>\r\n          I'm Bharadwaja , full stack web developer and Cybersecurity Graduate\r\n        </p>\r\n        <p></p>\r\n        <ul className=\"list-inline\">\r\n          <li className=\"list-inline-item\">\r\n            <a href=\"/\" style={{ color: \"#f4c10f\" }}>\r\n              <i className=\"fab fa-facebook\"></i>\r\n            </a>\r\n          </li>\r\n          <li className=\"list-inline-item\">\r\n            <a href=\"/\" style={{ color: \"#f4c10f\" }}>\r\n              <i className=\"fab fa-youtube\"></i>\r\n            </a>\r\n          </li>\r\n          <li className=\"list-inline-item\">\r\n            <a href=\"/\" style={{ color: \"#f4c10f\" }}>\r\n              <i className=\"fab fa-twitter\"></i>\r\n            </a>\r\n          </li>\r\n          <li className=\"list-inline-item\">\r\n            <a href=\"/\" style={{ color: \"#f4c10f\" }}>\r\n              <i className=\"fab fa-instagram\"></i>\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <div className=\"col-md-4 col-sm-6\" style={{ color: \"#5a606b\" }}>\r\n        <h3>KEEP IN TOUCH</h3>\r\n        <ul className=\"list-unstyled\">\r\n          <li>\r\n            <p>\r\n              <strong>\r\n                <i class=\"fas fa-user\"></i> Name:\r\n              </strong>{\" \"}\r\n              Bharadwaja Anaparty.\r\n            </p>\r\n          </li>\r\n\r\n          <li>\r\n            <p>\r\n              <strong>\r\n                <i className=\"fas fa-map-marker-alt\"></i> Address:\r\n              </strong>{\" \"}\r\n              714 East 61 Vancouver, BC, Canada.\r\n            </p>\r\n          </li>\r\n          <li>\r\n            <p>\r\n              <strong>\r\n                <i class=\"fas fa-phone\"></i> Phone:\r\n              </strong>{\" \"}\r\n              +1 7783218464\r\n            </p>\r\n          </li>\r\n          <li>\r\n            <p>\r\n              <strong>\r\n                <i className=\"fas fa-envelope\"></i> Email:\r\n              </strong>{\" \"}\r\n              anapartybharath33@gmail.com\r\n            </p>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { useState, useEffect } from \"react\";\nimport {\n  fetchMovies,\n  fetchGenre,\n  fetchMovieByGenre,\n  fetchPersons,\n  fetchTopratedMovie,\n} from \"../../service\";\nimport RBCarousel from \"react-bootstrap-carousel\";\nimport \"react-bootstrap-carousel/dist/react-bootstrap-carousel.css\";\nimport { Link } from \"react-router-dom\";\nimport ReactStars from \"react-rating-stars-component\";\nimport Footer from \"../Footer.js\";\n\nexport function Home() {\n  const [nowPlaying, setNowPlaying] = useState([]);\n  const [genres, setGenres] = useState([]);\n  const [movieByGenre, setMovieByGenre] = useState([]);\n  const [persons, setPersons] = useState([]);\n  const [topRated, setTopRated] = useState([]);\n\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setNowPlaying(await fetchMovies());\n      setGenres(await fetchGenre());\n      setMovieByGenre(await fetchMovieByGenre(28));\n      setPersons(await fetchPersons());\n      setTopRated(await fetchTopratedMovie());\n    };\n\n    fetchAPI();\n  }, []);\n\n  const handleGenreClick = async (genre_id) => {\n    setMovieByGenre(await fetchMovieByGenre(genre_id));\n  };\n  const movies = nowPlaying.slice(0, 5).map((item, index) => {\n    return (\n      <div style={{ height: 500, width: \"100%\" }} key={index}>\n        <div className=\"carousel-center\">\n          <img style={{ height: 600 }} src={item.backPoster} alt={item.title} />\n        </div>\n        <div className=\"carousel-center\">\n          <i\n            className=\"far fa-play-circle\"\n            style={{ fontSize: 95, color: \"#f4c10f\" }}\n          ></i>\n        </div>\n        <div\n          className=\"carousel-caption\"\n          style={{ textAlign: \"center\", fontSize: 35 }}\n        >\n          {item.title}\n        </div>\n      </div>\n    );\n  });\n\n  const genreList = genres.map((item, index) => {\n    return (\n      <li className=\"list-inline-item\" key={index}>\n        <button\n          type=\"button\"\n          className=\"btn btn-outline-info\"\n          onClick={() => {\n            handleGenreClick(item.id);\n          }}\n        >\n          {item.name}\n        </button>\n      </li>\n    );\n  });\n\n  const movieList = movieByGenre.slice(0, 4).map((item, index) => {\n    return (\n      <div className=\"col-md-3 col-sm-6\" key={index}>\n        <div className=\"card\">\n          <Link to={`/movie/${item.id}`}>\n            <img className=\"img-fluid\" src={item.poster} alt={item.title}></img>\n          </Link>\n        </div>\n        <div className=\"mt-3\">\n          <p style={{ fontWeight: \"bolder\" }}>{item.title}</p>\n          <p>Rated: {item.rating}</p>\n          <ReactStars\n            count={item.rating}\n            size={20}\n            color1={\"#f4c10f\"}\n          ></ReactStars>\n        </div>\n      </div>\n    );\n  });\n\n  const trendingPersons = persons.slice(0, 4).map((p, i) => {\n    return (\n      <div className=\"col-md-3 text-center\" key={i}>\n        <img\n          className=\"img-fluid rounded-circle mx-auto d-block\"\n          src={p.profileImg}\n          alt={p.name}\n        ></img>\n        <p className=\"font-weight-bold text-center\">{p.name}</p>\n        <p\n          className=\"font-weight-light text-center\"\n          style={{ color: \"#5a606b\" }}\n        >\n          Trending for {p.known}\n        </p>\n      </div>\n    );\n  });\n\n  const topRatedList = topRated.slice(0, 4).map((item, index) => {\n    return (\n      <div className=\"col-md-3\" key={index}>\n        <div className=\"card\">\n          <Link to={`/movie/${item.id}`}>\n            <img className=\"img-fluid\" src={item.poster} alt={item.title}></img>\n          </Link>\n        </div>\n        <div className=\"mt-3\">\n          <p style={{ fontWeight: \"bolder\" }}>{item.title}</p>\n          <p>Rated: {item.rating}</p>\n          <ReactStars\n            count={item.rating}\n            size={20}\n            color1={\"#f4c10f\"}\n          ></ReactStars>\n        </div>\n      </div>\n    );\n  });\n\n  return (\n    <div className=\"container\">\n      <div className=\"row mt-2\">\n        <div className=\"col\">\n          <RBCarousel\n            autoplay={true}\n            pauseOnVisibility={true}\n            slidesshowSpeed={5000}\n            version={4}\n            indicators={false}\n          >\n            {movies}\n          </RBCarousel>\n        </div>\n      </div>\n\n      <div className=\"row mt-3\">\n        <div className=\"col\">\n          <ul className=\"list-inline\">{genreList}</ul>\n        </div>\n      </div>\n\n      <div className=\"row mt-3\">\n        <div className=\"col\">\n          <div className=\"float-right\">\n            <i className=\"far fa-arrow-alt-circle-right\"></i>\n          </div>\n        </div>\n      </div>\n      <div className=\"row mt-3\">{movieList}</div>\n\n      <div className=\"row mt-3\">\n        <div className=\"col\">\n          <p className=\"font-weight-bold\" style={{ color: \"#5a606b\" }}>\n            TRENDING PERSONS ON THIS WEEK\n          </p>\n        </div>\n      </div>\n\n      <div className=\"row mt-3\">\n        <div className=\"col\">\n          <div className=\"float-right\">\n            <i className=\"far fa-arrow-alt-circle-right\"></i>\n          </div>\n        </div>\n      </div>\n      <div className=\"row mt-3\">{trendingPersons}</div>\n\n      <div className=\"row mt-3\">\n        <div className=\"col\">\n          <p className=\"font-weight-bold\" style={{ color: \"#5a606b\" }}>\n            TOP RATED MOVIES\n          </p>\n        </div>\n      </div>\n\n      <div className=\"row mt-3\">\n        <div className=\"col\">\n          <div className=\"float-right\">\n            <i className=\"far fa-arrow-alt-circle-right\"></i>\n          </div>\n        </div>\n      </div>\n      <div className=\"row mt-3\">{topRatedList}</div>\n\n      <hr className=\"mt-5\" style={{ borderTop: \"1px solid #5a606b\" }}></hr>\n      <Footer />\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport {\n  fetchMovieDetail,\n  fetchMovieVideos,\n  fetchCasts,\n  fetchSimilarMovie,\n} from \"../../service\";\nimport \"react-bootstrap-carousel/dist/react-bootstrap-carousel.css\";\nimport { Button, Modal } from \"react-bootstrap\";\nimport ReactPlayer from \"react-player\";\nimport ReactStars from \"react-rating-stars-component\";\nimport { Link } from \"react-router-dom\";\nimport Footer from \"../Footer\";\n\nexport function MovieDetail({ match }) {\n  let params = match.params;\n  let genres = [];\n  const [isOpen, setIsOpen] = useState(false);\n  const [detail, setDetail] = useState([]);\n  const [video, setVideo] = useState([]);\n  const [casts, setCasts] = useState([]);\n  const [similarMovie, setSimilarMovie] = useState([]);\n\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setDetail(await fetchMovieDetail(params.id));\n      setVideo(await fetchMovieVideos(params.id));\n      setCasts(await fetchCasts(params.id));\n      setSimilarMovie(await fetchSimilarMovie(params.id));\n    };\n\n    fetchAPI();\n  }, [params.id]);\n\n  genres = detail.genres;\n\n  const MoviePalyerModal = (props) => {\n    const youtubeUrl = \"https://www.youtube.com/watch?v=\";\n    return (\n      <Modal\n        {...props}\n        size=\"lg\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        <Modal.Header closeButton>\n          <Modal.Title\n            id=\"contained-modal-title-vcenter\"\n            style={{ color: \"#000000\", fontWeight: \"bolder\" }}\n          >\n            {detail.title}\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body style={{ backgroundColor: \"#000000\" }}>\n          <ReactPlayer\n            className=\"container-fluid\"\n            url={youtubeUrl + video.key}\n            playing\n            width=\"100%\"\n          ></ReactPlayer>\n        </Modal.Body>\n      </Modal>\n    );\n  };\n\n  let genresList;\n  if (genres) {\n    genresList = genres.map((g, i) => {\n      return (\n        <li className=\"list-inline-item\" key={i}>\n          <button type=\"button\" className=\"btn btn-outline-info\">\n            {g.name}\n          </button>\n        </li>\n      );\n    });\n  }\n\n  const castList = casts.slice(0, 4).map((c, i) => {\n    return (\n      <div className=\"col-md-3 text-center\" key={i}>\n        <img\n          className=\"img-fluid rounded-circle mx-auto d-block\"\n          src={c.img}\n          alt={c.name}\n        ></img>\n        <p className=\"font-weight-bold text-center\">{c.name}</p>\n        <p\n          className=\"font-weight-light text-center\"\n          style={{ color: \"#5a606b\" }}\n        >\n          {c.character}\n        </p>\n      </div>\n    );\n  });\n\n  const similarMovieList = similarMovie.slice(0, 4).map((item, index) => {\n    return (\n      <div className=\"col-md-3 col-sm-6\" key={index}>\n        <div className=\"card\">\n          <Link to={`/movie/${item.id}`}>\n            <img className=\"img-fluid\" src={item.poster} alt={item.title}></img>\n          </Link>\n        </div>\n        <div className=\"mt-3\">\n          <p style={{ fontWeight: \"bolder\" }}>{item.title}</p>\n          <p>Rated: {item.rating}</p>\n          <ReactStars\n            count={item.rating}\n            size={20}\n            color1={\"#f4c10f\"}\n          ></ReactStars>\n        </div>\n      </div>\n    );\n  });\n\n  return (\n    <div className=\"container\">\n      <Link className=\"\" to=\"/\">\n        <Button className=\"my-3\" variant=\"light\">\n          Back\n        </Button>\n      </Link>\n      <div className=\"row mt-2\">\n        <MoviePalyerModal\n          show={isOpen}\n          onHide={() => {\n            setIsOpen(false);\n          }}\n        ></MoviePalyerModal>\n        <div className=\"col text-center\" style={{ width: \"100%\" }}>\n          <img\n            className=\"img-fluid\"\n            src={`http://image.tmdb.org/t/p/original/${detail.backdrop_path}`}\n            alt={detail.title}\n          ></img>\n          <div className=\"carousel-center\">\n            <i\n              onClick={() => setIsOpen(true)}\n              className=\"far fa-play-circle\"\n              style={{ fontSize: 95, color: \"#f4c10f\", cursor: \"pointer\" }}\n            ></i>\n          </div>\n          <div\n            className=\"carousel-caption\"\n            style={{ textAlign: \"center\", fontSize: 35 }}\n          >\n            {detail.title}\n          </div>\n        </div>\n      </div>\n\n      <div className=\"row mt-3\">\n        <div className=\"col\">\n          <p style={{ color: \"#5a606b\", fontWeight: \"bolder\" }}>GENRE</p>\n        </div>\n      </div>\n\n      <div className=\"row mt-3\">\n        <div className=\"col\">\n          <ul className=\"list-inline\">{genresList}</ul>\n        </div>\n      </div>\n\n      <div className=\"row mt-3\">\n        <div className=\"col\">\n          <div className=\"text-center\">\n            <ReactStars\n              count={detail.vote_average}\n              size={20}\n              color1={\"#f4c10f\"}\n            ></ReactStars>\n          </div>\n          <div className=\"mt-3\">\n            <p style={{ color: \"#5a606b\", fontWeight: \"bolder\" }}>OVERVIEW</p>\n            {detail.overview}\n          </div>\n        </div>\n      </div>\n\n      <div className=\"row mt-3\">\n        <div className=\"col-md-3\">\n          <p style={{ color: \"#5a606b\", fontWeight: \"bolder\" }}>RELEASE DATE</p>\n          <p style={{ color: \"#f4c10f\" }}>{detail.release_date}</p>\n        </div>\n        <div className=\"col-md-3\">\n          <p style={{ color: \"#5a606b\", fontWeight: \"bolder\" }}>RUN TIME</p>\n          <p style={{ color: \"#f4c10f\" }}>{detail.runtime}</p>\n        </div>\n        <div className=\"col-md-3\">\n          <p style={{ color: \"#5a606b\", fontWeight: \"bolder\" }}>BUDGET</p>\n          <p style={{ color: \"#f4c10f\" }}>{detail.budget}</p>\n        </div>\n        <div className=\"col-md-3\">\n          <p style={{ color: \"#5a606b\", fontWeight: \"bolder\" }}>HOMEPAGE</p>\n          <p style={{ color: \"#f4c10f\" }}>{detail.homepage}</p>\n        </div>\n      </div>\n\n      <div className=\"row mt-3\">\n        <div className=\"col\">\n          <p style={{ color: \"#5a606b\", fontWeight: \"bolder\" }}>CASTS</p>\n        </div>\n      </div>\n      <div className=\"row mt-3\">{castList}</div>\n\n      <div className=\"row mt-3\">\n        <div className=\"col\">\n          <p style={{ color: \"#5a606b\", fontWeight: \"bolder\" }}>\n            SIMILAR MOVIES\n          </p>\n        </div>\n      </div>\n\n      <div className=\"row mt-3\">{similarMovieList}</div>\n\n      <hr className=\"mt-5\" style={{ borderTop: \"1px solid #5a606b\" }}></hr>\n\n      <Footer />\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport { Switch, Route } from \"react-router-dom\";\nimport { Home } from \"./components/home/Home\";\nimport { MovieDetail } from \"./components/moviedetail/MovieDetail\";\n\nexport function App() {\n  return (\n    <main>\n      <Switch>\n        <Route path=\"/\" component={Home} exact />\n        <Route path=\"/movie/:id\" component={MovieDetail} />\n      </Switch>\n    </main>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}